
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  avatar: 'avatar',
  name: 'name',
  email: 'email',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById',
  documentId: 'documentId',
  shareLink: 'shareLink',
  shareLinkExpiresAt: 'shareLinkExpiresAt',
  allowedEmails: 'allowedEmails',
  isPublic: 'isPublic'
};

exports.Prisma.RoomUserScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  userId: 'userId',
  role: 'role',
  joinedAt: 'joinedAt',
  lastActive: 'lastActive'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  userId: 'userId',
  isPublic: 'isPublic',
  tags: 'tags',
  allowComments: 'allowComments',
  allowSuggestions: 'allowSuggestions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastEditedAt: 'lastEditedAt'
};

exports.Prisma.DocumentImageScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  fileName: 'fileName',
  originalName: 'originalName',
  fileUrl: 'fileUrl',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  width: 'width',
  height: 'height',
  createdAt: 'createdAt'
};

exports.Prisma.DocumentVersionScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  content: 'content',
  versionNumber: 'versionNumber',
  changeDescription: 'changeDescription',
  createdAt: 'createdAt',
  createdBy: 'createdBy'
};

exports.Prisma.DocumentCollaboratorsScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  userId: 'userId',
  role: 'role',
  permissions: 'permissions',
  invitedAt: 'invitedAt',
  acceptedAt: 'acceptedAt'
};

exports.Prisma.DocumentCommentScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  userId: 'userId',
  content: 'content',
  lineNumber: 'lineNumber',
  isResolved: 'isResolved',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentShareScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  shareToken: 'shareToken',
  permissions: 'permissions',
  expiresAt: 'expiresAt',
  maxUses: 'maxUses',
  useCount: 'useCount',
  createdAt: 'createdAt',
  createdBy: 'createdBy'
};

exports.Prisma.DocumentTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  content: 'content',
  category: 'category',
  isPublic: 'isPublic',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  editorTheme: 'editorTheme',
  fontSize: 'fontSize',
  autoSave: 'autoSave',
  autoSaveInterval: 'autoSaveInterval',
  showLineNumbers: 'showLineNumbers',
  wordWrap: 'wordWrap',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentActivityScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  userId: 'userId',
  action: 'action',
  description: 'description',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Room: 'Room',
  RoomUser: 'RoomUser',
  Document: 'Document',
  DocumentImage: 'DocumentImage',
  DocumentVersion: 'DocumentVersion',
  DocumentCollaborators: 'DocumentCollaborators',
  DocumentComment: 'DocumentComment',
  DocumentShare: 'DocumentShare',
  DocumentTemplate: 'DocumentTemplate',
  UserSettings: 'UserSettings',
  DocumentActivity: 'DocumentActivity'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Lenovo\\Desktop\\WebDev\\omnidoc\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Lenovo\\Desktop\\WebDev\\omnidoc\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/generated/prisma\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        String   @id @default(uuid())\n  avatar    String   @default(\"vibrent_2.png\")\n  name      String\n  email     String   @unique\n  password  String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  documents      Document[]              @relation(\"DocumentOwner\")\n  collaborations DocumentCollaborators[]\n  comments       DocumentComment[] // Added missing relation\n  settings       UserSettings? // Added missing relation\n\n  rooms        RoomUser[]\n  createdRooms Room[] //rooms created by this usr.\n\n  @@index([email])\n  @@index([id])\n}\n\nmodel Room {\n  id        String   @id @default(uuid())\n  name      String\n  code      String   @unique // For easy room joining\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Creator reference\n  createdById String\n  createdBy   User   @relation(fields: [createdById], references: [id])\n\n  // Document reference kinda opt.\n  documentId String?\n  document   Document? @relation(fields: [documentId], references: [id])\n\n  // Room participants\n  participants RoomUser[]\n\n  shareLink          String?   @unique //opt. sharelink for the room.\n  shareLinkExpiresAt DateTime? //opt. expiry for the sharelink.\n  allowedEmails      String[] //list of allowed emails for the room\n  isPublic           Boolean   @default(false)\n\n  @@index([code])\n  @@index([createdById])\n  @@index([documentId])\n}\n\nmodel RoomUser {\n  id         String   @id @default(uuid())\n  roomId     String\n  userId     String\n  role       String   @default(\"participant\") // \"host\" or \"participant\"\n  joinedAt   DateTime @default(now())\n  lastActive DateTime @default(now())\n\n  // Relations\n  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([roomId, userId]) // Prevent duplicate room memberships\n  @@index([roomId])\n  @@index([userId])\n}\n\nmodel Document {\n  id      String @id @default(uuid())\n  title   String\n  content String @db.Text // JSON content from Tiptap editor\n  userId  String // Owner of the document\n\n  // Document metadata\n  isPublic Boolean  @default(false)\n  tags     String[] // Array of tags for categorization\n\n  // Document settings\n  allowComments    Boolean @default(true)\n  allowSuggestions Boolean @default(true)\n\n  // Timestamps\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  lastEditedAt DateTime @default(now())\n\n  // Relations\n  user          User                    @relation(\"DocumentOwner\", fields: [userId], references: [id], onDelete: Cascade)\n  images        DocumentImage[]\n  versions      DocumentVersion[]\n  collaborators DocumentCollaborators[]\n  comments      DocumentComment[]\n  shares        DocumentShare[] // Added missing relation\n  activities    DocumentActivity[] // Added missing relation\n  Room          Room[]\n\n  @@index([userId])\n  @@index([isPublic])\n  @@index([tags])\n  @@index([createdAt])\n  @@index([updatedAt])\n}\n\nmodel DocumentImage {\n  id           String   @id @default(uuid())\n  documentId   String\n  fileName     String // Generated unique filename\n  originalName String // Original filename from upload\n  fileUrl      String // URL to access the image\n  fileSize     Int\n  mimeType     String\n  width        Int?\n  height       Int?\n  createdAt    DateTime @default(now())\n\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n\n  @@index([documentId])\n  @@index([fileName])\n}\n\nmodel DocumentVersion {\n  id                String   @id @default(uuid())\n  documentId        String\n  content           String   @db.Text // JSON content snapshot from Tiptap editor\n  versionNumber     Int\n  changeDescription String? // Optional description of changes\n  createdAt         DateTime @default(now())\n  createdBy         String // User ID who made the change\n\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n\n  @@index([documentId])\n  @@index([versionNumber])\n  @@index([createdAt])\n}\n\nmodel DocumentCollaborators {\n  id          String    @id @default(uuid())\n  documentId  String\n  userId      String\n  role        String    @default(\"editor\") // \"viewer\", \"editor\", \"admin\"\n  permissions String[] // Array of specific permissions\n  invitedAt   DateTime  @default(now())\n  acceptedAt  DateTime?\n\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([documentId, userId])\n  @@index([documentId])\n  @@index([userId])\n}\n\nmodel DocumentComment {\n  id         String   @id @default(uuid())\n  documentId String\n  userId     String\n  content    String   @db.Text\n  lineNumber Int? // For line-specific comments\n  isResolved Boolean  @default(false)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([documentId])\n  @@index([userId])\n  @@index([createdAt])\n}\n\nmodel DocumentShare {\n  id          String    @id @default(uuid())\n  documentId  String\n  shareToken  String    @unique // Unique token for sharing\n  permissions String[] // Array of permissions\n  expiresAt   DateTime? // Optional expiration\n  maxUses     Int? // Optional usage limit\n  useCount    Int       @default(0)\n  createdAt   DateTime  @default(now())\n  createdBy   String // User ID who created the share\n\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n\n  @@index([documentId])\n  @@index([shareToken])\n  @@index([expiresAt])\n}\n\nmodel DocumentTemplate {\n  id          String   @id @default(uuid())\n  name        String\n  description String?\n  content     String   @db.Text // JSON template content from Tiptap editor\n  category    String? // \"blog\", \"meeting-notes\", \"api-docs\", etc.\n  isPublic    Boolean  @default(false)\n  userId      String? // Creator of the template (null for system templates)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@index([category])\n  @@index([isPublic])\n  @@index([userId])\n}\n\nmodel UserSettings {\n  id               String   @id @default(uuid())\n  userId           String   @unique\n  editorTheme      String   @default(\"default\")\n  fontSize         Int      @default(14)\n  autoSave         Boolean  @default(true)\n  autoSaveInterval Int      @default(30) // seconds\n  showLineNumbers  Boolean  @default(true)\n  wordWrap         Boolean  @default(true)\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n}\n\nmodel DocumentActivity {\n  id          String   @id @default(uuid())\n  documentId  String\n  userId      String\n  action      String // \"created\", \"edited\", \"shared\", \"commented\", etc.\n  description String?\n  metadata    Json? // Additional data about the action\n  createdAt   DateTime @default(now())\n\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n\n  @@index([documentId])\n  @@index([userId])\n  @@index([createdAt])\n}\n",
  "inlineSchemaHash": "85b4107fac3e1707d718a99de1dd2513c302729b68df11b56dce5fa9aa43433e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentOwner\"},{\"name\":\"collaborations\",\"kind\":\"object\",\"type\":\"DocumentCollaborators\",\"relationName\":\"DocumentCollaboratorsToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"DocumentComment\",\"relationName\":\"DocumentCommentToUser\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"UserSettings\",\"relationName\":\"UserToUserSettings\"},{\"name\":\"rooms\",\"kind\":\"object\",\"type\":\"RoomUser\",\"relationName\":\"RoomUserToUser\"},{\"name\":\"createdRooms\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToUser\"}],\"dbName\":null},\"Room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoomToUser\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToRoom\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"RoomUser\",\"relationName\":\"RoomToRoomUser\"},{\"name\":\"shareLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shareLinkExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"allowedEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"RoomUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActive\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomUser\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoomUserToUser\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowComments\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allowSuggestions\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastEditedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DocumentOwner\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"DocumentImage\",\"relationName\":\"DocumentToDocumentImage\"},{\"name\":\"versions\",\"kind\":\"object\",\"type\":\"DocumentVersion\",\"relationName\":\"DocumentToDocumentVersion\"},{\"name\":\"collaborators\",\"kind\":\"object\",\"type\":\"DocumentCollaborators\",\"relationName\":\"DocumentToDocumentCollaborators\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"DocumentComment\",\"relationName\":\"DocumentToDocumentComment\"},{\"name\":\"shares\",\"kind\":\"object\",\"type\":\"DocumentShare\",\"relationName\":\"DocumentToDocumentShare\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"DocumentActivity\",\"relationName\":\"DocumentToDocumentActivity\"},{\"name\":\"Room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"DocumentToRoom\"}],\"dbName\":null},\"DocumentImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToDocumentImage\"}],\"dbName\":null},\"DocumentVersion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"versionNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"changeDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToDocumentVersion\"}],\"dbName\":null},\"DocumentCollaborators\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invitedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToDocumentCollaborators\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DocumentCollaboratorsToUser\"}],\"dbName\":null},\"DocumentComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lineNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isResolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToDocumentComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DocumentCommentToUser\"}],\"dbName\":null},\"DocumentShare\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shareToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"maxUses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"useCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToDocumentShare\"}],\"dbName\":null},\"DocumentTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"editorTheme\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fontSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"autoSave\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"autoSaveInterval\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"showLineNumbers\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"wordWrap\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSettings\"}],\"dbName\":null},\"DocumentActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToDocumentActivity\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

